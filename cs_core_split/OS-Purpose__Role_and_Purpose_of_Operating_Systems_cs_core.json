{
  "title": "OS-Purpose: Role and Purpose of Operating Systems",
  "CS Core": "1. Operating systems mediate between general purpose hardware and application-specific software.\n2. Universal operating system functions (e.g., process, user and device interfaces, persistence of\ndata)\n3. Extended and/or specialized operating system functions (e.g., embedded systems, server types\nsuch as file, web, multimedia, boot loaders and boot security)\n4. Design issues (e.g., efficiency, robustness, flexibility, portability, security, compatibility, power,\nsafety, tradeoffs between error checking and performance, flexibility and performance, and security\nand performance) (See also: SEC-Engineering)\n5. Influences of security, networking, multimedia, parallel and distributed computing\n6. Overarching concern of security/protection: Neglecting to consider security at every layer creates\nan opportunity to inappropriately access resources.\nExample concepts:\na. Unauthorized access to files on an unencrypted drive can be achieved by moving the media to\nanother computer.\nb. Operating systems enforced security can be defeated by infiltrating the boot layer before the\noperating system is loaded.\nc. Process isolation can be subverted by inadequate authorization checking at API boundaries.\nd. Vulnerabilities in system firmware can provide attack vectors that bypass the operating system\nentirely.\ne. Improper isolation of virtual machine memory, computing, and hardware can expose the host\nsystem to attacks from guest systems.\nf. The operating system may need to mitigate exploitation of hardware and firmware\nvulnerabilities, leading to potential performance reductions (e.g., Spectre and Meltdown\nmitigations).\n7. Exposure of operating systems functions in shells and systems programming. (See also: FPL-\nScripting)\n206"
}