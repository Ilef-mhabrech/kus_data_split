{
  "title": "FPL-Abstraction: Program Abstraction and Representation",
  "Non-core": "10. L-values and R-values: mapping mutable variable-name to L-values; mapping immutable variable-\nnames to R-values\n11. Environment vs store and their properties\n12. Data and control abstraction\n13. Mechanisms for information exchange between program units such as procedures, functions, and\nmodules: nonlocal variables, global variables, parameter-passing, import-export between modules\n14. Data structures to represent code for execution, translation, or transmission.\n15. Low level instruction representation such as virtual machine instructions, assembly language, and\nbinary representation (See also: AR-Representation, AR-Assembly)\n16. Lambda calculus, variable binding, and variable renaming. (See also: AL-Models, FPL-Formalism)\n17. Types of semantics: operational, axiomatic, denotational, behavioral; define and use abstract\nsyntax trees; contrast with concrete syntax.\n140\nIllustrative learning outcomes:"
}