{
  "title": "NC-Emerging: Emerging Topics",
  "Illustrative Learning Outcomes": {
    "KA Core": "1. Describe the value of advances in middleboxes in networks.\n2. Describe the importance of Software Defined Networks.\n3. Describe some of the added value achieved by using Quantum Networking.\nProfessional Dispositions\n● Meticulous: Students must be particular about the specifics of understanding and creating\nnetworking protocols.\n● Collaborative: Students must work together to develop multiple components that interact together\nand to respond to failures and threats.\n● Proactive: Students must be able to predict failures, threats, and how to deal with them while\navoiding reactive modes of operation only.\n● Professional: Students must comply with the needs of the community and their expectations from\na networked environment, and the demands of regulatory bodies.\n201\n● Responsive: Students must act swiftly to changes in requirements in network configurations and\nchanging user requirements.\n● Adaptive: Students need to reconfigure systems under varying modes of operation.\nMathematics Requirements\nRequired:\n● MSF-Probability.\n● MSF-Statistics.\n● MSF-Discrete.\n● MSF-Linear Simple queuing theory concepts.\nCourse Packaging Suggestions\nCoverage of the concepts of networking including but not limited to types of applications used by the\nnetwork, reliability, routing and forwarding, single hop communication, security, and other emerging\ntopics.\nNote: both courses cover the same knowledge units but with different allocation of hours for each\nknowledge unit.\nCourse objectives: By the end of this course, learners should be able to understand many of the\nfundamental concepts associated with networking, learn about many types of networked applications,\nand develop at least one, understand basic routing and forwarding, single hop communications, and\ndeal with some issues pertaining to mobility, security, and emerging areas, all with embedded social,\nethical, and issues pertaining to the profession.\nIntroductory Course:\n● NC-Fundamentals (8 hours)\n● NC-Applications (12 hours)\n● NC-Reliability (6 hours)\n● NC-Routing (4 hours)\n● NC-SingleHop (3 hours)\n● NC-Mobility (3 hours)\n● NC-Security (3 hours)\n● SEP-Context (1 hour)\n● NC-Emerging (2 hours)\nCourse objectives: By the end of this course, learners would have obtained a refresher about some of\nthe fundamental issues of networking, networked applications, reliability, and routing and forwarding,\nand indulged in additional details of single hop communications, mobility, security, and emerging topics\nin the area, all while considering embedded social and ethical issues as well as issues pertaining to the\nprofession.\n202\nAdvanced Course:\n● NC-Fundamentals (3 hours)\n● NC-Applications (4 hours)\n● NC-Reliability(7 hours)\n● NC-Routing (6 hours)\n● NC-SingleHop (5 hours)\n● NC-Mobility (5 hours)\n● NC-Security (5 hours)\n● SEP-Privacy, SEP-Security, SEP-Sustainability (2 hours)\n● NC-Emerging (5 hours)\nCommittee\nChair: Sherif G. Aly, The American University in Cairo, Cairo, Egypt\nMembers:\n● Khaled Harras, Carnegie Mellon University, Pittsburgh, PA, USA\n● Moustafa Youssef, The American University in Cairo, Cairo, Egypt\n● Sergey Gorinsky, IMDEA Networks Institute, Madrid, Spain\n● Qiao Xiang, Xiamen University, Xiamen, China\nContributors:\n● Alex (Xi) Chen: Huawei, Montreal, Canada\n203\n204\nOperating Systems (OS)\nPreamble\nThe operating system is a collection of services needed to safely interface the hardware with\napplications. Core topics focus on the mechanisms and policies needed to virtualize computation,\nmemory, and Input/Output (I/O). Overarching themes that are reused at many levels in computer\nsystems are well illustrated in operating systems (e.g., polling vs interrupts, caching, flexibility vs costs,\nscheduling approaches to processes, page replacement, etc.). The Operating Systems knowledge area\ncontains the key underlying concepts for other knowledge areas — trust boundaries, concurrency,\npersistence, and safe extensibility.\nChanges since CS2013\nChanges from CS2013 include:\n● Renamed File Systems knowledge unit to File Systems API and Implementation knowledge\nunit,\n● Moved topics from the previous Performance and Evaluation knowledge unit to the Systems\nFundamentals (SF) knowledge area,\n● Moved some topics from File Systems API and Implementation and Device Management to the\nAdvanced File Systems knowledge unit, and\n● Added topics on systems programming and the creation of platform-specific executables to the\nFoundations of Programming Languages (FPL) knowledge area.\nCore Hours\nKnowledge Unit CS Core KA Core\nRole and Purpose of Operating Systems 2\nPrinciples of Operating System 2\nConcurrency 2 1\nProtection and Safety 2 1\nScheduling 2\nProcess Model 2\nMemory Management 0.5 +1.5 (AR)\nDevice Management 0.5+0.5 (AR)\n205\nFile Systems API and Implementation 2\nAdvanced File Systems 1\nVirtualization 1\nReal-time and Embedded Systems 1\nFault Tolerance 1\nSociety, Ethics, and the Profession Included in SEP hours\nTotal 8 13 (+ 2 counted in AR)\nKnowledge Units"
  }
}