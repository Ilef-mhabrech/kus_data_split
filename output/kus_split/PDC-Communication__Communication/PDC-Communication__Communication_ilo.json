{
  "title": "PDC-Communication: Communication",
  "Illustrative Learning Outcomes": {
    "CS Core": "1. Explain the similarities and differences among: (1) Party A sends a message on channel X with\ncontents 1 received by party B (2) A sets shared variable X to 1, read by B (3) A sets “X=1’ in a\ndistributed shared map accessed by B.",
    "KA Core": "2. Write a program that distributes different segments of a data set to multiple workers, and collects\nresults (for the simplest example, summing segments of an array).\n3. Write a parallel program that requests data from multiple sites and summarizes them using some\nform of reduction.\n4. Compare the performance of buffered versus unbuffered versions of a producer-consumer\nprogram.\n5. Determine whether a given communication scheme provides sufficient security properties for a\ngiven usage.\n6. Give an example of an ordering of accesses among concurrent activities (e.g., program with a data\nrace) that is not sequentially consistent.\n7. Give an example of a scenario in which blocking message sends can deadlock.\n8. Describe at least one design technique for avoiding liveness failures in programs using multiple\nlocks.\n9. Write a program that illustrates memory-access or message reordering.\n10. Describe the relative merits of optimistic versus conservative concurrency control under different\nrates of contention among updates.\n11. Give an example of a scenario in which an attempted optimistic update may never complete.\n12. Modify a concurrent system to use a more scalable, reliable, or available data store.\n13. Using an existing platform supporting replicated data stores, write a program that maintains a key-\nvalue mapping even when one or more hosts fail."
  }
}