{
  "title": "SPD-Game: Game Platforms",
  "KA Core": "1. Historical and contemporary platforms for games (See also: AR-Logic)\na. Evolution of Game Platforms (e.g., Brown Box to Metaverse and beyond; Improvement in\nComputing Architectures (CPU and GPU); Platform Convergence and Mobility)\nb. Typical Game Platforms (e.g., Personal Computer; Home Console; Handheld Console;\nArcade Machine; Interactive Television; Mobile Phone; Tablet; Integrated Head-Mounted\nDisplay; Immersive Installations and Simulators; Internet of Things enabled Devices; CAVE\nSystems; Web Browsers; Cloud-based Streaming Systems)\nc. Characteristics and Constraints of Different Game Platforms (e.g., Features (local storage,\ninternetworking, peripherals); Run-time performance (GPU/CPU frequency, number of\ncores); Chipsets (physics processing units, vector co-processors); Expansion Bandwidth\n(PCIe); Network throughput (Ethernet); Memory types and capacities (DDR/GDDR);\nMaximum stack depth; Power consumption; Thermal design; Endian)\nd. Typical Sensors, Controllers, and Actuators (e.g., distinctive control system designs –\nperipherals (mouse, keypad, joystick), game controllers, wearables, interactive surfaces;\n306\nelectronics and bespoke hardware; computer vision, inside-out tracking, and outside-in\ntracking; IoT-enabled electronics and I/O (See also: GIT-Interaction)\ne. eSports Ecosystems (e.g., evolution of gameplay across platforms; games and eSports;\ngame events such as LAN/arcade tournaments and international events such as the\nOlympic eSports Series; streamed media and spectatorship; multimedia technologies and\nbroadcast management; professional play; data and machine learning for coaching and\ntraining)\n2. Real-time Simulation and Rendering Systems\na. CPU and GPU architectures (e.g., Flynn’s taxonomy; parallelization; instruction sets;\nstandard components – graphics compute array, graphics memory controller, video graphics\narray basic input/output system; bus interface; power management unit; video processing\nunit; display interface) (See also: AR-Heterogeneity)\nb. Pipelines for physical simulations and graphical rendering: (e.g., tile-based, immediate-\nmode). (See also: GIT-Rendering)\nc. Common Contexts for Algorithms, Data Structures, and Mathematical Functions (e.g., game\nloops; spatial partitioning, viewport culling, and level of detail; collision detection and\nresolution; physical simulation; behavior for intelligent agents; procedural content\ngeneration) (See also: MSF-Discrete, AL-Foundational)\nd. Media representations (e.g., I/O, and computation techniques for virtual worlds: audio;\nmusic; sprites; models and textures; text; dialogue; multimedia (e.g., olfaction, tactile) (See\nalso: GIT-Fundamentals)\n3. Game Development Tools and Techniques\na. Programming Languages (e.g., C++; C#; Lua; Python; JavaScript)\nb. Shader Languages (e.g., HLSL, GLSL; Shader Graph)\nc. Graphics Libraries and APIs (e.g., DirectX; SDL; OpenGL; Metal; Vulkan; WebGL). (See\nalso: GIT-Rendering, HCI-Design)\nd. Common Development Tools and Environments (e.g., IDEs; Debuggers; Profilers; Version\nControl Systems including those handling binary assets; Development Kits and\nProduction/Consumer Kits; Emulators) (See also: SDF-Practices, SE-Tools)\n4. Game Engines\na. Open Game Engines (e.g., Unreal; Unity; Godot; CryEngine; Phyre; Source 2; Pygame and\nRen’Py; Phaser; Twine; Spring RTS)\nb. Techniques (e.g., Ideation, Prototyping, Iterative Design and Implementation, Compiling\nExecutable Builds, Development Operations and Quality Assurance – Play Testing and\nTechnical Testing, Profiling; Optimization, Porting; Internationalization and Localization,\nNetworking) (See also: AR-Performance-Energy, SE-Requirements)\n5. Game Design\na. Vocabulary (e.g., game definitions; mechanics-dynamics-aesthetics model; industry\nterminology; experience design; models of experience and emotion)\nb. Design Thinking and User-Centered Experience Design (e.g., methods of designing games;\niteration, incrementing, and the double-diamond; phases of pre- and post-production; quality\nassurance, including alpha and beta testing; stakeholder and customer involvement;\ncommunity management) (See also: SE-Design)\n307\nc. Genres (e.g., adventure; walking simulator; first-person shooter; real-time strategy;\nmultiplayer online battle arena (MOBA); role-playing game (rpg))\nd. Audiences and Player Taxonomies (e.g., people who play games; diversity and broadening\nparticipation; pleasures, player types, and preferences; Bartle, yee) (See also: HCI-User)\ne. Proliferation of digital game technologies to domains beyond entertainment (e.g., Education\nand Training; Serious Games; Virtual Production; eSports; Gamification; Immersive\nExperience Design; Creative Industry Practice; Artistic Practice; Procedural Rhetoric) (See\nalso: AI-SEP)"
}