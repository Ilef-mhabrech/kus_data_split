{
  "title": "SF-SEP: Society, Ethics, and the Profession",
  "Illustrative Learning Outcomes": {
    "KA Core": "1. Describe the intellectual property rights of computer systems.\n2. List representative software licenses and compare their differences.\n3. List representative computer crimes.\nProfessional Dispositions\n● Meticulous: Students must pay attention to details of different perspectives when learning about\nand evaluating systems.\n● Adaptive: Students must be flexible and adaptive when designing systems. Different systems have\ndifferent requirements, constraints and working scenarios. As such, they require different designs.\nStudents must be able to make appropriate design decisions correspondingly.\nMathematics Requirements\nRequired:\n● Discrete Mathematics (See also: MSF-Discrete)\no Sets and relations\no Basic graph theory\no Basic logic\n● Linear Algebra (See also: MSF-Linear)\no Basic matrix operations\n● Probability and Statistics (See also: MSF-Probability, MSF-Statistics)\no Random variable\no Bayes theorem\no Expectation and Variation\no Cumulative distribution function and probability density function\nDesirable:\n● Basic queueing theory\n● Basic stochastic process\nCourse Packaging Suggestions\nIntroductory Course to include the following:\n● SF-Overview (2 hours)\n● SF-Foundations (6 hours)\n● SF-Resource (4 hours)\n● SF-Performance (6 hours)\n● SF-Evaluation (6 hours)\n● SF-Reliability (4 hours)\n298\n● SF-Security (5 hours)\n● SF-SEP (1 hour)\n● SF-Design (6 hours)\nPrerequisites:\n● Sets and relations, basic graph theory and basic logic from Discrete Mathematics (See also:\nMSF-Discrete)\n● Basic matrix operations from Linear Algebra (See also: MSF-Linear)\n● Random variable, Bayes theorem, expectation and variation, cumulative distribution function\nand probability density function from Probability and Statistics (See also: MSF-Probability, MSF-\nStatistics)\nCourse objectives: Students should be able to (1) understand the fundamental concepts in computer\nsystems; (2) understand the key design principles, in terms of performance, reliability and security,\nwhen designing computer systems; (3) deploy and evaluate representative complex systems (e.g.,\nMySQL and Spark) based on their documentations, and (4) design and implement simple computer\nsystems (e.g., an interactive program, a simple web server, and a simple data storage system).\nAdvanced Course to include the following:\n● SF-Overview: Overview of Computer Systems (2 hours)\n● SF-Design: System Design (8 hours)\n● OS-Purpose, OS-Principles (2 hours)\n● NC-Fundamentals, NC-Networked-Applications (2 hours)\n● PDC-Programs (2 hours)\n● AR-IO, AR-Performance-Energy (2 hours)\n● SF-Reliability (8 hours)\n● SF-Performance (6 hours)\n● SF-Security (6 hours)\n● SF-SEP: (2 hours)\nPrerequisites:\n● Basic queueing theory and stochastic process (See also: MSF-Probability, MSF-Statistics)\n● Introductory course of the SF knowledge area\nCourse objectives: Students should be able to (1) have a deeper understanding in the key design\nprinciples of computer system design, (2) map such key principles to the designs of classic systems\n(e.g., Linux, SQL and TCP/IP network stack) as well as that of more recent systems (e.g., Hadoop,\nSpark and distributed storage systems), and (3) design and implement more complex computer\nsystems (e.g., a file system and a high-performance web server).\nCommittee\nChair: Qiao Xiang, Xiamen University, Xiamen, China\n299\nMembers:\n● Doug Lea, State University of New York at Oswego, Oswego, NY, USA\n● Monica D. Anderson, University of Alabama, Tuscaloosa, AL, USA\n● Matthias Hauswirth, University of Lugano, Lugano, Switzerland\n● Ennan Zhai, Alibaba Group, Hangzhou, China\n● Yutong Liu, Shanghai JiaoTong University, Shanghai, China\nContributors:\n● Michael S. Kirkpatrick, James Madison University, Harrisonburg, VA, USA\n● Linghe Kong, Shanghai JiaoTong University, Shanghai, China\n300\nSpecialized Platform Development (SPD)\nPreamble\nThe Specialized Platform Development (SPD) knowledge area refers to attributes involving the creation\nof software targeting non-traditional hardware platforms. Developing for each specialized platform, for\nexample, robots, mobile systems, web-based systems, and embedded systems, typically involves\nunique considerations.\nSocietal and industry needs have created a high demand for developers on specialized platforms, such\nas mobile applications, web platforms, robotic platforms, and embedded systems. Some unique\nprofessional abilities relevant to this knowledge area include the following.\n● Creating applications that provide a consistent user experience across various devices, screen\nsizes, and operating systems.\n● Developing application programming interfaces (APIs) to support the functionality of each\nspecialized platform.\n● Managing challenges related to resource constraints such as computation, memory, storage,\nand networking and communication.\n● Applying cross-cutting concerns such as optimization, security, better development practices,\netc.\nChanges since CS2013\nThe assessment of these factors has led to significant modifications from the CS2013 version, including\nthe following.\n• The knowledge area name has been changed to reflect the specialized development platforms\nwhich serve as the target for software development.\n• Reflecting the increased deployment of specialized hardware platforms, the number of CS Core\nhours has been increased.\n• Reflecting modern computing systems, knowledge units in Robotics, Embedded Systems, and\nSociety, Ethics, and the Profession (SEP) have been introduced.\n• Other changes include: 1) renamed Introduction knowledge unit to Common Aspects/Shared\nConcerns and 2) renamed Industrial Platforms to Robot Platforms.\nCore Hours\nKnowledge Unit CS Core KA Core\nCommon Aspects 3 + (1 SE) 2\nWeb Platforms 5 + (1 HCI)\n301\nMobile Platforms 3 + (2 DM) + (1 GIT) + (1 HCI) + (1 NC)\nRobot Platforms 4 + (3 GIT) + (3 AI)\nEmbedded Platforms 4 + (4 AR) + (1 FPL) + (1 GIT) + (3 OS) + (1 SF)\nGame Platforms 4 + (1 AL) + (1 AI) + (4 AR) + (5 GIT) + (2 HCI) +\n(1 SDF) + (1 SE) + (1 MSF)\nInteractive Computing 3 + (1 DM) + (2 GIT) + (1 AR) + (1 FPL)\nPlatforms\nSPD-SEP Included in SEP hours\nTotal 4\nNote: The CS Core hours total includes 1 hour shared with SE.\nKnowledge Units"
  }
}