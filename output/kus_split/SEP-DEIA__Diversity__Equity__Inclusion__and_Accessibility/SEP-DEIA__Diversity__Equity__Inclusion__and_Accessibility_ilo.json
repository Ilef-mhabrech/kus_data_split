{
  "title": "SEP-DEIA: Diversity, Equity, Inclusion, and Accessibility",
  "Illustrative Learning Outcomes": {
    "CS Core": "1. Define and distinguish equity, equality, diversity, inclusion, and accessibility.\n2. Identify language, practices, and behaviors that may make someone feel included in a workplace\nand/or a team, and why is it relevant. Avoid charged terminology - see Words Matter\n(www.acm.org/diversity-inclusion/words-matter) – this includes identifying and accommodating\nusers who are often excluded without thought and not considered at all.\n3. Evaluate the accessibility of your classroom or lab. Evaluate the accessibility of your webpage.\n(See www.w3.org/WAI and www.w3.org/TR/WCAG21).\n4. Demonstrate collegiality and respect when working with team members who do not share your\nidentity. It is not enough to merely assign team projects. Faculty should prepare students for\nteamwork and monitor, mentor, and assess the effectiveness of their student teams throughout a\nproject.\n5. Compare the demographics of your institution’s computer science and STEM majors to the overall\ninstitutional demographics. If they differ, identify factors that contribute to inequitable access,\nengagement, and achievement in computer science among marginalized groups. If they do not,\nassess why not.\n6. Identify developers’ assumptions and values embedded in hardware and software design,\nespecially as they pertain to usability by diverse populations.\n7. Identify examples of the benefits that diverse teams can bring to software products, and how a lack\nof diversity has costs.",
    "KA Core": "8. Analyze the work of experts who reflect the identities of the classroom and the world.\n9. Assess the impact of power and privilege in the computing profession as it relates to culture,\nindustry, products, and society.\n10. Develop examples of systemic changes that could positively address diversity, equity, inclusion,\nand accessibility in a familiar context (i.e., in an introductory computing course) and an unfamiliar\ncontext and when these might be different, or the same.\n11. Compare the demographics of your institution to the overall community demographics. If they\ndiffer, identify factors that contribute to inequitable access, engagement, and achievement among\nmarginalized groups. If they do not, assess why not.\nProfessional Dispositions\n● Critically Self-reflective: Students should be able to inspect their own actions, thoughts, biases,\nprivileges, and motives to discover places where professional activity is not up to current standards.\nThey must strive to understand both conscious and unconscious biases and continuously work to\ncounteract them.\n● Responsive: Students must quickly and accurately respond to changes in the field and adapt in a\nprofessional manner, such as shifting from in-person office work to remote work at home. These\nshifts require rethinking one’s entire approach to what is considered “professional”.\n286\n● Proactive: Students must be able to identify areas of importance (e.g., in accessibility and inclusion)\nand understand how to address them for a more professional working environment.\n● Culturally Competent: Students must prioritize cultural competence—the ability to work with people\nfrom cultures different from one’s own – by using inclusive language, watching for, and counteracting\nconscious and unconscious biases, and encouraging honest and open communication.\n● Advocative: Students must think, speak, and act in ways that foster and promote diversity, equity,\ninclusion, and accessibility in all ways including but not limited to teamwork, communication, and\nproduct development (hardware and software).\n● Responsible: Students must act responsibly in all areas of their work toward all users and\nstakeholders including the society at large, colleagues, and their profession in general.\nCourse Packaging Suggestions\nIn computing, societal and ethical considerations arise in all other knowledge areas and therefore\nshould arise in the context of other computing courses, not just siloed in an “SEP course.” These topics\nshould be covered in courses starting from the first year (the only likely exception is SEP-Ethical-\nAnalysis: Methods for Ethical Analysis) although this could be delivered as part of a first-year course or\nvia a seminar or an online independent study.\nPresenting SEP topics as advanced topics only covered in later courses could create the incorrect\nperception that SEP topics are only important at a certain level or complexity. While it is true that the\nimportance and consequence of SEP topics increases with level and complexity, introductory topics are\nnot devoid of SEP topics. Further, many SEP topics are best presented early to lay a foundation for\nmore intricate topics later in the curriculum.\nInstructor choice for some of these topics is complex. When SEP topics arise in other courses these\nare naturally often taught by the instructor teaching that course, although at times bringing in expert\neducators from other disciplines (e.g., law, ethics) could be advantageous. Stand-alone courses in SEP\n– should they be needed – are likely best delivered by an interdisciplinary team. However, this brings\nadditional complexity. Regardless, who teaches SEP topics and/or courses warrants careful\nconsideration.\nAt a minimum the SEP CS Core learning outcomes are best covered in the context of courses\ncovering other knowledge areas – ideally the SEP KA Core hours are also, with the likely\nexception of SEP-Ethical-Analysis. This knowledge unit (KU) underlies every other KU in the SEP\nknowledge area (KA). However, this KU is the only one in the SEP KA that does not readily lend itself\nto being taught in the context of other KAs. Delivering these topics warrants even more careful\nconsideration as to how/where they will be covered, and who will teach them. In conjunction with\ncovering SEP topics as they occur naturally in other KAs, dedicated SEP courses can add value.\nHowever, a sole, stand-alone course in a program where SEP topics are not covered in other courses\nshould be a last resort.\nAt some institutions, an in-depth dedicated course at the mid- or advanced-level may be offered\ncovering all recommended topics in both the CS Core and KA Core KUs in close coordination with\nlearning outcomes best covered in the context of courses covering other KAs. Such a course\ncould include:\n287\n● SEP-Context (5 hours)\n● SEP-Ethical-Analysis (3 hours)\n● SEP-Professional-Ethics (4 hours)\n● SEP-IP (2 hours)\n● SEP-Privacy (3 hours)\n● SEP-Communication (3 hours)\n● SEP-Sustainability (2 hours)\n● SEP-History (2 hours)\n● SEP-Economies (1 hour)\n● SEP-Security (3 hours)\n● SEP-DEIA (4 hours)\nSkill Statement\nA student who completes this course should be able to contribute to systemic change by applying\nsocietal and ethical knowledge using relevant underpinnings and frameworks to their work in the\ncomputing profession in a culturally competent manner including contributing to positive developments\nin inclusion, equity, diversity, and accessibility in computing.\nAt some institutions, a dedicated minimal course may be offered covering the CS Core knowledge\nunits in close coordination with learning outcomes best covered in the context of courses\ncovering other knowledge areas. Such a course could include:\n● SEP-Context (3 hours)\n● SEP-Ethical-Analysis (2 hours)\n● SEP-Professional-Ethics (2 hours)\n● SEP-IP (1 hour)\n● SEP-Privacy (2 hours)\n● SEP-Communication (2 hours)\n● SEP-Sustainability (1 hour)\n● SEP-History (1 hour)\n● SEP-Security (2 hours)\n● SEP-DEIA (2 hours)\nSkill Statement\nA student who completes this course should be able to apply societal and ethical knowledge to their\nwork in the computing profession while fostering and contributing to inclusion, equity, diversity, and\naccessibility in computing.\nSome Exemplary Materials\n● Emanuelle Burton, Judy Goldsmith, Nicholas Mattei, Cory Siler, and Sara-Jo Swiatek. 2023.\nTeaching Computer Science Ethics Using Science Fiction. In Proceedings of the 54th ACM\nTechnical Symposium on Computer Science Education V. 2 (SIGCSE 2023). Association for\nComputing Machinery, New York, NY, USA, 1184. https://doi.org/10.1145/3545947.3569618\n● Randy Connolly. 2020. Why computing belongs within the social sciences. Commun. ACM 63, 8\n(August 2020), 54–59. https://doi.org/10.1145/3383444\n288\n● Casey Fiesler. Tech Ethics Curricula: A Collection of Syllabi Used to Teach Ethics in\nTechnology Across Many Universities\na. https://cfiesler.medium.com/tech-ethics-curricula-a-collection-of-syllabi-3eedfb76be18 ;\naccessed March 12, 2024.\nb. Tech Ethics Curricula; accessed March 12, 2024.\n● Casey Fiesler. Tech Ethics Readings: A Spreadsheet of Readings Used to Teach Ethics in\nTechnology Tech Ethics Class Readings; accessed March 12, 2024.\n● Stanford Embedded EthiCS, Embedding Ethics in Computer Science.\nhttps://embeddedethics.stanford.edu/; accessed March 12, 2024.\n● Jeremy, Weinstein, Rob Reich, and Mehran Sahami. System Error: Where Big Tech Went\nWrong and How We Can Reboot. Hodder Paperbacks, 2023.\n● Baecker, R. Computers in Society: Modern Perspectives, Oxford University Press. (2019).\n● Embedded EthiCS @ Harvard: bringing ethical reasoning into the computer science curriculum.\nhttps://embeddedethics.seas.harvard.edu/about; accessed March 12, 2024.\nCommittee\nChair: Brett A. Becker, University College Dublin, Dublin, Ireland\nMembers:\n● Richard L. Blumenthal, Regis University, Denver, CO, USA\n● Mikey Goldweber, Denison University, Granville, OH, USA\n● James Prather, Abilene Christian University, Abilene, TX, USA\n● Susan Reiser, University of North Carolina Asheville, Asheville, NC, USA\n● Michelle Trim, University of Massachusetts Amherst, Amherst, MA, USA\n● Titus Winters, Google, Inc, New York, NY, USA\nContributors:\n● Jake Baskin, Computer Science Teachers Association, Chicago, IL, USA\n● Johanna Blumenthal, Regis University, Denver, CO, USA\n● Chris Stephenson, Google, Portland, OR, USA\n● MaryAnne Egan, Siena College, Loudonville, NY, USA\n● Catherine Mooney, University College Dublin, Dublin, Ireland\n● Fay Cobb Payton, North Carolina State University, Raleigh, NC, USA\n● Keith Quille, Technological University of Dublin, Dublin, Ireland\n● Mehran Sahami, Stanford University, Stanford, CA, USA\n● Mark Scanlon, University College Dublin, Dublin, Ireland\n● Karren Shorofsky, University of San Francisco School of Law, San Francisco, CA, USA\n● Andreas Stefik, University of Nevada, Las Vegas, Las Vegas, NV, USA\n● Ellen Walker, Hiram College, Cleveland, OH, USA\n289\nReferences\n1. ACM/IEEE-CS Joint Curriculum Task Force. “Computing Curricula 1991.” (New York, USA: ACM\nPress and IEEE Computer Society Press, 1991).\n2. ACM/IEEE-CS Joint Curriculum Task Force. “Computing Curricula 2001 Computer Science.” (New\nYork, USA: ACM Press and IEEE Computer Society Press, 2001).\n3. ACM/IEEE-CS Interim Review Task Force. “Computer Science Curriculum 2008: An interim revision\nof CS 2001.” (New York, USA: ACM Press and IEEE Computer Society Press, 2008).\n4. Randy Connolly. 2020. Why computing belongs within the social sciences. Commun. ACM 63, 8\n(August 2020), 54–59. https://doi.org/10.1145/3383444\n5. ACM Code of Ethics and Professional Conduct. www.acm.org/about/code-of-ethics\n6. IEEE Code of Ethics. https://www.ieee.org/about/corporate/governance/p7-8.html; accessed March\n12, 2024.\n7. AAAI Code of Professional Ethics and Conduct. https://aaai.org/Conferences/code-of-ethics-and-\nconduct.php; accessed March 12, 2024.\n8. Diversity, Equity, and Inclusion - Welcoming All to Computing https://www.acm.org/diversity-\ninclusion; accessed March 12, 2024.\n9. Diversity, Equity & Inclusion at IEEE. https://www.ieee.org/about/diversity-index.html; accessed\nMarch 12, 2024.\n10. AAAI Diversity Statement. https://aaai.org/about-aaai/ethics-and-diversity/#diversity-statement;\naccessed March 12, 2024.\n11. A Framework for Ethical Decision Making. https://www.scu.edu/ethics/ethics-resources/a-\nframework-for-ethical-decision-making/ accessed March 12, 2024.\n12. Sustainability | United Nations. https://www.un.org/en/academic-impact/sustainability; accessed\nMarch 12, 2024.\n13. What is Sustainability? https://www.sustain.ucla.edu/what-is-sustainability; accessed March 12,\n2024.\n290\nSystems Fundamentals (SF)\nPreamble\nA computer system is a set of hardware and software infrastructures upon which applications are\nconstructed. Computer systems have become a pillar of people's daily life. As such, it is essential for\nstudents to learn knowledge about computer systems, grasp the skills to use and design these\nsystems, and understand the fundamental rationale and principles in computer systems. It could equip\nstudents with the necessary competence for a career related to computer science.\nIn the curriculum of computer science, the study of computer systems typically spans multiple\nknowledge areas, including, but not limited to, operating systems, parallel and distributed systems,\ncommunications networks, computer architecture and organization, and software engineering. The\nSystem Fundamentals knowledge area, as suggested by its name, focuses on the fundamental\nconcepts and design principles in computer systems that are shared by these courses within their\nrespective cores. The goal of this knowledge area is to present an integrative view of these\nfundamental concepts and design principles in a unified albeit simplified fashion, providing a common\nfoundation for the different specialized mechanisms and policies appropriate to the specific domain\narea. The fundamental concepts in this knowledge area include an overview of computer systems,\nbasic concepts such as state and state transition, resource allocation and scheduling, and so on.\nMoreover, this knowledge area introduces basic design principles to improve the reliability, availability,\nefficiency, and security of computer systems.\nChanges since CS2013\nCompared to CS2013, the SF knowledge area incorporated significant changes to the knowledge units.\n• Added two new knowledge units: System Security and System Design.\n• Added a new knowledge unit named System Performance, which includes the topics from the\ndeprecated knowledge unit of Proximity and the deprecated knowledge unit of Virtualization and\nIsolation.\n• Added a new knowledge unit named Performance Evaluation, that includes the topics from the\ndeprecated unit of Evaluation and the deprecated unit of Quantitative Evaluation.\n• Renamed the Computational Paradigms knowledge unit to Overview of Computer Systems,\ndeprecated some topics in the unit, and added topics from the deprecated unit of Cross-Layer\nCommunications.\n• Renamed the State and State Machines knowledge unit to Basic Concepts and added topics such\nas finite state machines.\n• Deprecated the Cross-Layer Communications knowledge unit and moved parts of its topics to the\nunit of Overview of Computer Systems.\n• Deprecated the Evaluation and Quantitative Evaluation knowledge units and moved parts of their\ntopics to the unit of Performance Evaluation.\n• Deprecated the Proximity and Virtualization and Isolation knowledge units and moved parts of their\ntopics to the knowledge unit of System Performance.\n291\n• Deprecated the Parallelism knowledge unit and moved parts of its topic to the Basic Concepts\nknowledge unit.\n• Renamed the Reliability through Redundancy knowledge unit to System Reliability.\n• Added the Society, Ethics, and the Profession knowledge unit.\nCore Hours\nKnowledge Unit CS Core KA Core\nOverview of Computer Systems 3 0\nBasic Concepts 4 0\nResource Management 1 1\nSystem Performance 2 2\nPerformance Evaluation 2 2\nSystem Reliability 2 1\nSystem Security 2 1\nSystem Design 2 1\nSociety, Ethics, and Profession Included in SEP hours\nTotal 18 8\nKnowledge Units"
  }
}