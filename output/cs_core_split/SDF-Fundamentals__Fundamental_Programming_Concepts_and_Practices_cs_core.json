{
  "title": "SDF-Fundamentals: Fundamental Programming Concepts and Practices",
  "CS Core": "1. Basic concepts such as variables, primitive data types, expressions, and their evaluation\n230\n2. How imperative programs work: state and state transitions on execution of statements, flow of\ncontrol\n3. Basic constructs such as assignment statements, conditional and iterative statements, basic I/O\n4. Key modularity constructs such as functions (and methods and classes, if supported in the\nlanguage) and related concepts like parameter passing, scope, abstraction, data encapsulation\n(See also: FPL-OOP)\n5. Input and output using files and APIs\n6. Structured data types available in the chosen programming language like sequences (e.g., arrays,\nlists), associative containers (e.g., dictionaries, maps), others (e.g., sets, tuples) and when and how\nto use them (See also: AL-Foundational)\n7. Libraries and frameworks provided by the language (when/where applicable)\n8. Recursion\n9. Dealing with runtime errors in programs (e.g., exception handling).\n10. Basic concepts of programming errors, testing, and debugging (See also: SE-Construction, SEC-\nCoding)\n11. Documenting/commenting code at the program and module level.(See also: SE-Construction)\n12. Develop a security mindset. (See also: SEC-Foundations)"
}